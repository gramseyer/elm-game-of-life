Hannah Brodheim
Geoffrey Ramseyer

Elm Game of Life

We created a Conways Game of Life in Elm. 
The game contains a user interface to modify the functionality of the game or adjust the true and false placement upon the grid. 

The User Interface is designed to take up the bottom portion of the screen.  It contains the following options to adjust the games rules.

The default of the game contains the basic rules, that a square with 3 neighbors becomes alive, and a square with anything other than 2 or 3 neighbors dies.  These options can be changed from a grid and immediately applied to the game while it is running.

There is also an option to make the grid torodial.  By default the game is not torodial, by toggling the button the grid can be made to "wrap around" and allow the user to create different images.  

There is also an option to increase and decrease the speed.  This works by ignoring ticks if the speed is decreased, the tick rate is the same, an increasing number of the ticks are ignored.  The maximum speed is bounded by the tick rate initially set (50 milliseconds).   The minimum speed is bounded at zero. 

The grid automatically adjusts to its contents, that is a moving shape will expand the grid as it increases the edge.  This is automatically disengaged in the torodial form since in this state it never reaches the edge.  There are 2 fields, "Max X-Dimension" and "Max Y-Dimension" which allow the user to limit the expansion of the grid.  In the case that the grid is already beyond the size specified it will simply cease to expand.  The grid does not contract or fail given a maximum size already smaller than the grid.

The user can also interact more directly with the contents of the grid.  The left most button is (depending on the state) "Start Simulation" or "Stop Simulation".  In the stopped state the user can directly click on squares of the grid to toggle their state between alive or dead, represented as true and false. 

Clicking Clear Grid sets all squares to false.

Clicking New Grid initializes a new grid with all squares set to false.  If the fields "New X-Dimension" or "New Y-Dimension" are not both set, the grid will be the current size, otherwise the grid will take on the dimensions specified.

There are a number of preset grid configurations that the user can chose from a drop down menu.  They also have the option to save a configuration that they create using the "Save Grid As" field paired with the "Save Grid" button. 

These saved configurations are only available for that session and are not written to the computer. 

The grid automatically adjusts square size to be the maximum available based upon window size and the restraint of leaving room vertically for the UI.  The UI is defaulted based on button size to save sufficient space.  The grid will always generate square buttons. 